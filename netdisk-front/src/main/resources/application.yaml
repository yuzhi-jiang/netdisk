server:
  port: 8082
mycloud:
  register:
    registerByMobileLogin: true #未注册手机 通过登录直接注册
    baseCapacity: 524288000 #基础容量 500G 单位为Byte
  redis:
    open: true
  hdfsBasePath: /yefeng
spring:
  servlet:
    multipart:
      max-request-size: 10240MB
      max-file-size: 5120MB
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    #    url: jdbc:mysql://localhost:3306/netdisk?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8
    url: jdbc:mysql://127.0.0.1:3306/netdisk?serverTimezone=UTC
    username: root
    password: xxxx
    # 指定类型为我们自己的
    type: com.alibaba.druid.pool.DruidDataSource



    #   数据源其他配置
    #初始化时建立物理连接的个数
    initial-size: 5
    #最小连接池数量
    min-idle: 5
    #最大连接池数量 maxIdle已经不再使用
    max-active: 20
    #获取连接时最大等待时间，单位毫秒
    max-wait: 60000
    #申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    test-while-idle: true
    #既作为检测的间隔时间又作为testWhileIdel执行的依据
    time-between-eviction-runs-millis: 60000
    #销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
    min-evictable-idle-time-millis: 30000
    #用来检测连接是否有效的sql 必须是一个查询语句
    #mysql中为 select 'x'
    #oracle中为 select 1 from dual
    validation-query: select 'x'
    #申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
    test-on-borrow: false
    #归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
    test-on-return: false
    # 是否缓存preparedStatement
    pool-prepared-statements: true
    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    #配置监拉统计挡成的filters. stat: 监控统计、Log4j:日志记录、waLL: 防御sqL注入
    #如果启用日志记录时报错java.lang.ClassNotFoundException: org.apache.log4j.Priority
    #则导入Log4j 依赖即时，Maven 地址: https://mvnrepository. com/artifact/log4j/log4
    filters: stat,wall,1og4j
    max-pool-prepared-statement-per-connection-size: 20
    use-global-data-source-stat: true
    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    password: xxxxxxx
feign:
  okhttp:
    enabled: true
  hystrix:
    enabled: false
  compression:
    request:
      enabled: true
      mime-type: text/html,application/xml,application/json
      min-request-size: 1024
    response:
      enabled: true
  client:
    config:
      # 全局配置
      default:
        connectTimeout: 5000
        readTimeout: 5000
      # 实例配置，feignName即@feignclient中的value，也就是服务名
      hdfsUpload:
        connectTimeout: 100000
        readTimeout: 100000


#
##hystrix的超时时间
#hystrix:
#  command:
#    default:
#      execution:
#        timeout:
#          enabled: true
#        isolation:
#          thread:
#            timeoutInMilliseconds: 15000   #设置调用者等待命令执行的超时限制，超过此时间，HystrixCommand被标记为TIMEOUT，并执行回退逻辑
#      circuitBreaker:
#        requestVolumeThreshold: 200     #设置在一个滚动窗口中，打开断路器的最少请求数
#        sleepWindowInMilliseconds: 5000 #设置在回路被打开，拒绝请求到再次尝试请求并决定回路是否继续打开的时间
#        errorThresholdPercentage: 50    #设置打开回路并启动回退逻辑的错误比率
#  threadpool:
#    default:
#      coreSize: 200                    #核心线程数
#      maxQueueSize: 200               #最大队列数
#      queueSizeRejectionThreshold: 160   #队列拒绝阈值设置
#ribbon:
#  ReadTimeout: 10000
#  ConnectTimeout: 3000
#  MaxAutoRetries: 1 #同一台实例最大重试次数,不包括首次调用
#  MaxAutoRetriesNextServer: 1 #重试负载均衡其他的实例最大重试次数,不包括首次调用
#  OkToRetryOnAllOperations: false  #是否所有操作都重试
#
#
#
#
